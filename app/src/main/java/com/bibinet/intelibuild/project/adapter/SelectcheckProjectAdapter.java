package com.bibinet.intelibuild.project.adapter;import android.content.Context;import android.support.v7.widget.RecyclerView;import android.util.SparseBooleanArray;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.TextView;import com.bibinet.intelibuild.R;import com.bibinet.intelibuild.project.bean.SelectCheckProjectAdapterBean;import com.bibinet.intelibuild.project.utils.PickerViewUtils;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;/** * Created by bibinet on 2017-12-27. */public class SelectcheckProjectAdapter extends RecyclerView.Adapter<SelectcheckProjectAdapter.SelectCheckViewholder> {    private int[] projectImage = new int[]{R.drawable.selectcheck_selector1, R.drawable.selectcheck_selector2, R.drawable.selectcheck_selector3,            R.drawable.selectcheck_selector4, R.drawable.selectcheck_selector5, R.drawable.selectcheck_selector6, R.drawable.selectcheck_selector7,            R.drawable.selectcheck_selector8,R.drawable.selectcheck_selector9};    private String[] descrpName = new String[]{"抗拉强度", "扭转实验", "断裂伸长率", "电阻率", "直流电阻", "介电强度", "热延伸", "不延燃实验", "成束燃烧"};    private Context context;    private SparseBooleanArray mSelectedPositions = new SparseBooleanArray();//用于存放选中item的位置    private PickerViewUtils pickerViewUtils;    public SelectcheckProjectAdapter(Context context) {        this.context = context;        pickerViewUtils=new PickerViewUtils();    }    //设置itemview选中    private void setItemChecked(int position, boolean isChecked) {        mSelectedPositions.put(position, isChecked);    }    //根据位置判断条目是否选中    private boolean isItemChecked(int position) {        return mSelectedPositions.get(position);    }    @Override    public SelectCheckViewholder onCreateViewHolder(ViewGroup parent, int viewType) {        View view = LayoutInflater.from(context).inflate(R.layout.item_selectcheckprojcet_adapter, null);        SelectCheckViewholder selectCheckViewholder = new SelectCheckViewholder(view);        return selectCheckViewholder;    }    @Override    public void onBindViewHolder(final SelectCheckViewholder holder, final int position) {        holder.projectImage.setImageResource(projectImage[position]);        holder.projectName.setText(descrpName[position]);        holder.mitemView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                //多选                if (isItemChecked(position)) {                    setItemChecked(position, false);                } else {                    setItemChecked(position, true);                }                pickerViewUtils.initView(context,holder.labelNumb,R.layout.item_pickerview_label);                if (isItemChecked(position)) {                    holder.isSelectImage.setVisibility(View.VISIBLE);                }else {                    holder.isSelectImage.setVisibility(View.GONE);                }            }        });    }    @Override    public int getItemCount() {        return projectImage.length;    }    class SelectCheckViewholder extends RecyclerView.ViewHolder {        @BindView(R.id.descrpImage)        ImageView descrpImage;        @BindView(R.id.projectImage)        ImageView projectImage;        @BindView(R.id.isSelectImage)        ImageView isSelectImage;        @BindView(R.id.projectName)        TextView projectName;        @BindView(R.id.labelNumb)        TextView labelNumb;        @BindView(R.id.itemView)        RelativeLayout mitemView;        public SelectCheckViewholder(View itemView) {            super(itemView);            ButterKnife.bind(this, itemView);        }    }}